/*
 * CDR Banking API
 *
 * Consumer Data Standards APIs created by the Data Standards Body (DSB), with the Data Standards Chair as the decision maker to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1.27.0
 * Contact: contact@consumerdatastandards.gov.au
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace BankingProductsData.Models
{
    /// <summary>
    /// BankingProductBundle
    /// </summary>
    [DataContract]
        public partial class BankingProductBundle :  IEquatable<BankingProductBundle>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BankingProductBundle" /> class.
        /// </summary>
        /// <param name="name">Name of the bundle (required).</param>
        /// <param name="description">Description of the bundle (required).</param>
        /// <param name="additionalInfo">Display text providing more information on the bundle.</param>
        /// <param name="additionalInfoUri">Link to a web page with more information on the bundle criteria and benefits.</param>
        /// <param name="productIds">Array of product IDs for products included in the bundle that are available via the product end points.  Note that this array is not intended to represent a comprehensive model of the products included in the bundle and some products available for the bundle may not be available via the product reference end points.</param>
        public BankingProductBundle(string name = default(string), string description = default(string), string additionalInfo = default(string), string additionalInfoUri = default(string), List<string> productIds = default(List<string>))
        {
            // to ensure "name" is required (not null)
            // Greg - Macquarie was missing
            //if (name == null)
            //{
            //    throw new InvalidDataException("name is a required property for BankingProductBundle and cannot be null");
            //}
            //else
            //{
            this.Name = name;
            //}
            // to ensure "description" is required (not null)
            //if (description == null)
            //{
            //    throw new InvalidDataException("description is a required property for BankingProductBundle and cannot be null");
            //}
            //else
            //{
                this.Description = description;
            //}
            this.AdditionalInfo = additionalInfo;
            this.AdditionalInfoUri = additionalInfoUri;
            this.ProductIds = productIds;
        }
        
        /// <summary>
        /// Name of the bundle
        /// </summary>
        /// <value>Name of the bundle</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Description of the bundle
        /// </summary>
        /// <value>Description of the bundle</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Display text providing more information on the bundle
        /// </summary>
        /// <value>Display text providing more information on the bundle</value>
        [DataMember(Name="additionalInfo", EmitDefaultValue=false)]
        public string AdditionalInfo { get; set; }

        /// <summary>
        /// Link to a web page with more information on the bundle criteria and benefits
        /// </summary>
        /// <value>Link to a web page with more information on the bundle criteria and benefits</value>
        [DataMember(Name="additionalInfoUri", EmitDefaultValue=false)]
        public string AdditionalInfoUri { get; set; }

        /// <summary>
        /// Array of product IDs for products included in the bundle that are available via the product end points.  Note that this array is not intended to represent a comprehensive model of the products included in the bundle and some products available for the bundle may not be available via the product reference end points
        /// </summary>
        /// <value>Array of product IDs for products included in the bundle that are available via the product end points.  Note that this array is not intended to represent a comprehensive model of the products included in the bundle and some products available for the bundle may not be available via the product reference end points</value>
        [DataMember(Name="productIds", EmitDefaultValue=false)]
        public List<string> ProductIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BankingProductBundle {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  AdditionalInfo: ").Append(AdditionalInfo).Append("\n");
            sb.Append("  AdditionalInfoUri: ").Append(AdditionalInfoUri).Append("\n");
            sb.Append("  ProductIds: ").Append(ProductIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BankingProductBundle);
        }

        /// <summary>
        /// Returns true if BankingProductBundle instances are equal
        /// </summary>
        /// <param name="input">Instance of BankingProductBundle to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BankingProductBundle input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.AdditionalInfo == input.AdditionalInfo ||
                    (this.AdditionalInfo != null &&
                    this.AdditionalInfo.Equals(input.AdditionalInfo))
                ) && 
                (
                    this.AdditionalInfoUri == input.AdditionalInfoUri ||
                    (this.AdditionalInfoUri != null &&
                    this.AdditionalInfoUri.Equals(input.AdditionalInfoUri))
                ) && 
                (
                    this.ProductIds == input.ProductIds ||
                    this.ProductIds != null &&
                    input.ProductIds != null &&
                    this.ProductIds.SequenceEqual(input.ProductIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.AdditionalInfo != null)
                    hashCode = hashCode * 59 + this.AdditionalInfo.GetHashCode();
                if (this.AdditionalInfoUri != null)
                    hashCode = hashCode * 59 + this.AdditionalInfoUri.GetHashCode();
                if (this.ProductIds != null)
                    hashCode = hashCode * 59 + this.ProductIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
